image: registry.gitlab.com/mldbai/mldb/mldb_build_env_ubuntu:20.04

stages:
  - build

build:
  stage: build
  interruptible: true
  before_script:
     - apt update && apt -y install software-properties-common
     - add-apt-repository -y ppa:ubuntu-toolchain-r/test
     - apt update && apt -y install wget gcc-11 g++-11 gfortran-11
     - wget -qO - https://gitlab.com/mldbai/mldb_build/-/raw/main/sccache-x86_64-linux.gz | gzip -d > sccache
     - chmod +x ./sccache
  script:
    - git submodule init
    - git submodule update --jobs=8 --depth=1 --progress
    - declare -x SCCACHE_BUCKET=mldb-sccache-a3f9b3
    - declare -x AWS_ACCESS_KEY_ID="$SCCACHE_AWS_AKID"
    - declare -x AWS_SECRET_ACCESS_KEY="$SCCACHE_AWS_SECRET"
    - declare -x SCCACHE_S3_USE_SSL=true
    - declare -x SCCACHE_REGION=us-east-2
    - declare -x POSTCFLAGS='-O2 -g0' POSTCXXFLAGS='-O2 -g0'
    - declare -x PRECXX=./sccache
    - declare -x toolchain=gcc11
    - make -j4 -k dependencies
    - ./sccache --show-stats
    - make -j32 -k compile || make -j32 -k compile || make -j32 -k compile
    - ./sccache --show-stats
    - declare -x LANG=en_US.utf8 LC_ALL=en_US.utf8 USER=root
    - mkdir tmp
    - (make -j8 -k test || (echo "TEST SUITE RESTART" && make -j8 -k test)) | python3 jml-build/to_junit.py > junit.xml
  artifacts:
    when: always
    paths:
       - junit.xml
       - build/x86_64/bin
       - build/x86_64/lib
       - build/x86_64/mldb_plugins
    reports:
      junit: junit.xml

sanitize:
  stage: build
  interruptible: true
  before_script:
     - apt update && apt -y install software-properties-common
     - add-apt-repository -y ppa:ubuntu-toolchain-r/test
     - apt update && apt -y install wget clang-13
     - wget -qO - https://gitlab.com/mldbai/mldb_build/-/raw/main/sccache-x86_64-linux.gz | gzip -d > sccache
     - chmod +x ./sccache
  script:
    - git submodule init
    - git submodule update --jobs=8 --depth=1 --progress
    - declare -x SCCACHE_BUCKET=mldb-sccache-a3f9b3
    - declare -x AWS_ACCESS_KEY_ID="$SCCACHE_AWS_AKID"
    - declare -x AWS_SECRET_ACCESS_KEY="$SCCACHE_AWS_SECRET"
    - declare -x SCCACHE_S3_USE_SSL=true
    - declare -x SCCACHE_REGION=us-east-2
    - declare -x POSTCFLAGS='-O2 -g' POSTCXXFLAGS='-O2 -g'
    - declare -x PRECXX=./sccache
    - declare -x toolchain=clang
    - declare -x sanitizers=address,undefined
    - declare -x ASAN_OPTIONS=detect_leaks=0:use_sigaltstack=false
    - declare -x UBSAN_OPTIONS=use_sigaltstack=false:print_stacktrace=1
    - make -j4 -k dependencies
    - ./sccache --show-stats
    - make -j32 -k compile || make -j32 -k compile
    - ./sccache --show-stats
    - declare -x LANG=en_US.utf8 LC_ALL=en_US.utf8 USER=root
    - mkdir tmp
    - (make -j8 -k test || (echo "TEST SUITE RESTART" && make -j8 -k test)) | python3 jml-build/to_junit.py > junit-asan.xml
  artifacts:
    when: always
    paths:
       - junit-asan.xml
    reports:
      junit: junit-asan.xml
