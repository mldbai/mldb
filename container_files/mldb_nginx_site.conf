upstream mldb_upstream {
    server {{MLDB_RUNNER_LISTEN_ADDR}}:{{MLDB_RUNNER_LISTEN_PORT}};
    keepalive 64;
}

upstream mldb_logger {
    server 127.0.0.1:{{MLDB_LOGGER_HTTP_PORT}};
    keepalive 8;
}

server {
    listen 80;
    server_name mldb;
    keepalive_requests 1000000000;

    include /etc/nginx/uwsgi_params;
    root {{NGINX_ROOT}};

    access_log off;  # left out for performance reasons
    # access_log /var/log/nginx/access.log;  # uncomment if required
    error_log /var/log/nginx/error.log;

    client_max_body_size 0;  # dangerously unlimited POST/PUT size.
    proxy_read_timeout 2h;    # allow long running import scripts

    location @mldb {
       proxy_pass http://mldb_upstream;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       add_header Access-Control-Allow-Origin *;
    }

    error_page 401 /error/licensing.html;
    error_page 502 503 /error/5xx.html;

    location /error/ {
        auth_request off;
        internal;
        rewrite ^/error(.*) $1 break;
        location ~ /error/.*\.json {
            rewrite ^/error(.*) $1 break;
            types { } default_type application/json;
        }
    }

{%- if NGINX_DISABLE_AUTH_CHECK is not defined %}
    # http://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request
    # If the subrequest returns a 2xx response code, the access is allowed.
    # If it returns 401 or 403, the access is denied with the corresponding error code.
    # Any other response code returned by the subrequest is considered an error.
    auth_request /auth-check;
{%- endif %}

    location {% if HTTP_BASE_URL != "" %}{{HTTP_BASE_URL}}{%else%}/{%endif%} {

        # Static files served directly by nginx
        # accomodate filesystem layout by removing HTTP_BASE_URL prefix
        rewrite ^{{HTTP_BASE_URL}}(/?.*) $1 break;
    }

    # PUBLIC favicon
    location ~ ^{{HTTP_BASE_URL}}/(favicon.ico) {
        rewrite ^{{HTTP_BASE_URL}}(/?.*) $1 break;
        auth_request off;
    }

    location ~ ^{{HTTP_BASE_URL}}/?$ {
        # root index goes to ipython notebook
        # absolute redirect to avoid losing port
        return 302 $scheme://$http_host{{HTTP_BASE_URL}}/{{IPYTHON_NB_PREFIX}};
        auth_request off;
    }

    # PUBLIC proxied services
    location {{HTTP_BASE_URL}}/auth-check {
        auth_request off;
        uwsgi_param REQUEST_METHOD GET;
        uwsgi_param REQUEST_URI /verifier/activation;
        uwsgi_param PATH_INFO /verifier/activation;
        uwsgi_pass 127.0.0.1:9100 ;
    }
    location {{HTTP_BASE_URL}}/verifier/activation_sign_in {
        auth_request off;
        uwsgi_pass 127.0.0.1:9100 ;
    }

    # hack to avoid losing port in redirects
    # http://forum.nginx.org/read.php?29,257545,257545#msg-257545
    location = {{HTTP_BASE_URL}}/doc {
        return 301 $scheme://$http_host{{HTTP_BASE_URL}}/doc/;
    }

    # Documentation routes
    location ~ {{HTTP_BASE_URL}}/(doc|resources)/ {
        # send documentation and resources to mldb (MLDB-1451)
        auth_request off;
        rewrite ^{{HTTP_BASE_URL}}(/?.*) $1 break;
        proxy_pass http://mldb_upstream;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        add_header Access-Control-Allow-Origin *;
    }
    

    # PRIVATE resources - protected by auth_check above

    {#-
        We need 2 sets of MLDB related routes:
          - one at /
            - used by regular mldb images and by pymldb
          - one at HTTP_BASE_URL if defined
            - used by hub/hosted
    #}
{%- set mldb_roots = [''] %} {# implicit / #}
{%- if HTTP_BASE_URL != "" %}
  {% set mldb_roots = mldb_roots + [HTTP_BASE_URL] %}
{%- endif %}

{%- for mldb_root in mldb_roots %}

    # MLDB routes
    location {{mldb_root}}/v1 {
        proxy_pass http://mldb_upstream/v1;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header mldb-original-uri $uri;
        error_page 502 503 /error/5xx.json;
        error_page 401 /error/401.json;
    }

{%- endfor %}

    # ipython
    location {{HTTP_BASE_URL}}/{{IPYTHON_NB_PREFIX}} {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_http_version 1.1;
        # for websockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # make sure this works even if we can't write to local fs
        proxy_max_temp_file_size 0;
        proxy_pass http://{{IPYTHON_NB_LISTEN_ADDR}}:{{IPYTHON_NB_LISTEN_PORT}};
    }

    location {{HTTP_BASE_URL}}/logs/mldb {
       types { } default_type text/plain;
       proxy_pass http://mldb_logger/logs/mldb;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       add_header Access-Control-Allow-Origin *;
    }

}
